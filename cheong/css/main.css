@font-face {
    font-family: 'Pretendard';
    font-weight: 400;
    font-display: swap;
    src: local('Pretendard Regular'), url(../fonts/Pretendard-Regular.woff2) format('woff2'), url(../fonts/Pretendard-Regular.woff) format('woff');
}
@font-face {
    font-family: 'Pretendard';
    font-weight: 700;
    font-display: swap;
    src: local('Pretendard Bold'), url(../fonts/Pretendard-Bold.woff2) format('woff2'), url(../fonts/Pretendard-Bold.woff) format('woff');
}

html, body {
    /* Pretendard Variable */
    font-family: 'Pretendard', sans-serif; /*서체*/
    font-size: 15px; /*크기*/
    color: #3d3d3d; /* 글자색상 */
    font-weight: 400; /* 글자의 두께 */
    line-height: 1.4; /*auto*/
    word-break: keep-all; /*(중요) 단어를 묶어서 줄바꿈 */
    letter-spacing: -0.05em; /*자간*/
}
.wrapper { /* 홈페이지의 넓이를 제한하고 가운데 정렬 */
    width: 1280px; /* 넓이제한 */   
    margin: 0 auto; /* 가운데설정 */
}
#wrap {/* id=wrap"에 적용되는 스타일 */
    min-width: 1280px;
    /* pc형에서 wrapper사이즈보다브라우저 넓이가 작을 때 가로스크롤바가 생성되는데
    오른쪽 background가 짤리는 현상이 생김 가로스크롤바가 생성되엇을때도 홈페이지를 정상적으로 서비스 하기위해
    최소 넓이를 입력*/
}
/* 태그초기화 - 태그의 기본 스타일 제거하는 목적 */
* { /* *은 와이드 카드*/
    padding: 0; /* 모든 태그의 여백삭제 */
    margin: 0; 
    box-sizing: border-box; 
    /* padding 하고 border는 넓이를 늘리는 요소로, 넓이를 늘리지 않도록 하는 속성*/
}
/* 다중선택자 설정은 ,(쉼표)를 넣으면 된다 - 동일적용 보통 초기화에 많이 넣어서 씀  */
ul, ol, li {
    list-style: none; /* ul li앞에 동그라미 삭제 */
}
/* a태그는 파란색에 undeline이 기본적으로 생성되기에 text-decoration 태그로 없애야함 (none;) */
a {
 text-decoration: none; /* 언더라인 막는태크 */
 color: inherit; /* inherit = 누군가 상속해준 스타일을 적용해 라는 의미 > 기본적으로 body에있는거*/
}
address, em {
    /* address는 기본적으로 글자가 기울여져서 em을 뒤에 붙여 기울임 없애는 태그 */
    font-style: normal;
}

/* body가 선언한 속성대로 적용될 수 있도록 초기화 함 */
h1, h2, h3, h4, h5, h6, strong {
    font-size: inherit;
    font-weight: inherit;    
}
/* button태그는 기본스타일이 많음 */
button {
    background-color: transparent; /*투명*/
    border: 0; /* 테두리 삭제 */
    color: inherit; /* 브라우저가 주는 값 삭제 다시 값 줘야 함*/
    font-family: inherit; /*button은 서체도 바꿔서 다시 줘야 함; */
}

.header {
    /* body를 기준으로 정렬
        postion값을 주면 (예외 relative) block요소라도
        콘텐츠가 존재하는 만큼만 넓이값이 있다
        block요소는 원래 넓이가 100%
        이걸 기대하고 코딩하면 안된다 = 넓이 걍 100%주라는 말
    */
    position: absolute;
    left: 0;
    top: 0;
    z-index: 100; /* position을 준 요소가 깔려서 안보일 때 사용
    z-index가 높은 요소가 더 위에 나타남
    그래서 header가 항상 위에 잇어야 함.. 그래서 높은 숫자 100을 미리 줌 */
    width: 100%; /* header가 absolute면 넓이는 무조건 100% */
    color: #fff;
}
.header .logo {
    float: left;
    margin-top: 35px;
}
.header .gnb {
    float: right;
}
.header .gnb ul {
    display: flex;
}
.header .gnb ul li a {
    font-size: 22px;
    padding: 36px 30px 27px 30px;
    display: block;
}

.visual {
    /* 넓이와 높이는 제한이기 때문에 신중하게 */ 
    height: 800px;
    background: url(../images/visual_bg.png) center center no-repeat;
    border-radius: 0 0 200px 0; /* 시계방향 - 왼쪽상단 */
    /* 이미지 모서리라운드 디자인했다면 라운드 없이 사각으로 저장하고 css에서 라운드처리 */
    position: relative;
    
}
.visual h2 {
    text-align: center;
    padding: 330px 0 0 0;
}
.visual .photo {
    width: 120px;
    height: 120px;
    background-color: #163D78;
    color: #fff;
    display: block;
    border-radius: 100%;
    /* 동그라미는 넓이와 높이를 주고 border-radius:100%로 줌 */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
    position: absolute; /* visual 기준 */
    bottom: -50px;
    left: calc(50% + 584px); /* 무조건 50% 뒤에 띄어주고 작) */
    /* 가운데를 기준(50%)으로 오른쪽으로 584px만큼 이동
        calc() 넓이나, 여백나 위치값등을 계산할 때 사용
        %d와 px처럼 단위가 다른 수는 계산할 때 사용 */
}
.visual .photo i {
    padding: 22px 0 0 0;
    display: block;
}
.visual .photo span {
    display: block;
    /* i태그와 span태그 모두 inline태그라 줄바꿈이 안되서 
        span태그에 block을 주면 넓이가 100%되서 줄이 바뀜 */
    line-height: 1.1;
}

.cluture {
    margin-top: 140px;
}
.cluture .inner {
    position: relative; 
}
.cluture h2 {
    color: #1d1d1d;
    font-size: 40px;
    font-weight: 700;
}
.cluture .sub_tit {
    margin: 10px 0 30px 0;
}
.cluture ul {
    display: flex;
    justify-content: space-between;
}
.cluture ul li {
    width: 299px;    
}
.cluture ul li a h3 {
    color: #1d1d1d;
    font-size: 25px;
    font-weight: 700;
    margin: 0 0 10px 0;
}
.cluture .more {
    position: absolute;
    top: 90px;
    right: 0;
    display: flex;
    align-items: center;
    /* 만약 언더라인을 줬다면 border-bottom: 1px solid #ccc; 으로 주면되고
       박스를 만들엇다면 border: px solid #색상으로 주면 된다 
       모서리 라운드를 줬다면 아래에 border-radius: px 태그를 하나 더 주면 된다
       박스안에 여백을 줄거면 padding을 주면 된다*/
}
.cluture .more span {
    margin-right: 10px;
}

.tour {
    margin-top: 140px;
}
.tour h2 {
    color: #1d1d1d;
    font-size: 40px;
    font-weight: 700;
}
.tour .sub_tit {
    margin: 10px 0 30px 0;
}
.tour ul {
    display: flex;
    justify-content: space-between;
}   
.tour ul li {
    width: 190px;
    /* a가 늘어난만큼 늘어나며 li의 높이는 a 한테 준다
    li사이즈와 a사이즈를 똑같이 주기 위해서 
    li에 높이를 주고 a에 heighr:100%를 주면 x높이 100%는 안들어가는 경우 많음
    (넓이 100%는 가능)*/
    color: #fff;
}
/* 바로 뒤에 .이오는경우는 태그안에 이거 데리고 오라는 의미 */
/* 코딩은 수정하라는게 더 많기때문에 수정하기 편한 코딩으로 작업해야함 */
.tour ul li.tour01 {
    background: url(../images/tour01.png) center center no-repeat;
}
.tour ul li.tour02 {
    background: url(../images/tour02.png) center center no-repeat;
}
.tour ul li.tour03 {
    background: url(../images/tour03.png) center center no-repeat;
}
.tour ul li.tour04 {
    background: url(../images/tour04.png) center center no-repeat;
}
/* li.actvie => li태그들 중에서 active 데리고 오라는거임 */
.tour ul li a {
    padding: 330px 0 0 0;
    height: 400px;
    display: block;
}
.tour ul li a h3 {
    text-align: center;
    font-size: 25px;
    font-weight: 700;
}
.tour ul li a p {
    display: none; /* 숨김 */
}

.tour ul li.active {
    width: 626px;
}
.tour ul li.active a {
    padding: 284px 0 0 40px;
}
.tour ul li.active a h3 {
    text-align: left;
    font-size: 25px;
    font-weight: 700;
}
.tour ul li.active a p {
    /* display:none;으로 숨김처리한 것을 다시 나타나게 하려면 display:none을 제외한 그 어떠한 속성을 줘도 나타난다.
    단, 해당 스타일이 적요오디기 때문에 맞춰서 줘야하며 일반적으로속성이 필요하지 않으면 block을 준다 */
    display: block; 
}
.tour .inner {
    position: relative;
}
.tour .more {
    position: absolute;
    top: 65px;
    right: 0;
    display: flex;
    align-items: center;
}
.tour .more span {
    margin-right: 10px;
}

.community {
    height: 800px;
    background: url(../images/community_bg.png) center center no-repeat;
    color: #fff;
    margin-top: 140px;
}
.community .inner {
    display: flex;
    padding: 170px 0 0 0;
}
.community .tit h2 {
    width: 218px;
    font-size: 45px;
    font-weight: 700;
}
.community .sub_tit {
    font-size: 30px;
    font-weight: 400;
    margin: 10px 0 10px 0;
}
.community .notice {
    width: 626px;
    height: 427px;
    background: rgba(23, 41, 69, 0.8);
    border-radius: 20px;
    padding: 64px 77px;
}
.community .notice h3 {
    font-size: 30px;
    font-weight: 700;
}
.community .notice ul li {
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}
.community .notice ul li:last-child {
    border-bottom: 0;
}
.community .notice ul li a {
    line-height: 50px;
    display: flex;
    justify-content: space-between;
}
.community .notice ul li a span {
    color: rgba(255, 255, 255, 0.8);
}
.community .service {
    width: 409px;
    margin: 119px 0 0 27px;
}
.community .service ul {
    display: flex; /* 좌우로 일렬되려는 습성 태그 */
    flex-wrap: wrap;  
    justify-content: space-between;
}
.community .service ul li {
    width: 190px;
    /* li의 사이즈와 a사이즈를 동일하게 주려면 li 한테 넓이를 주고 a한테 높이를 준다  */
    margin-bottom: 28px;
}
.community .service ul li a {
    height: 140px;
    background: rgba(23, 41, 69, 0.8);
    border-radius: 10px;
    display: block;
    padding: 23px 28px 23px 28px;
    position: relative;
}
.community .service ul li a strong {
    font-size: 20px;
    font-weight: 700;
}
.community .service ul li a i {
    position: absolute;
    top: 80px;
    right: 30px;
}

.footer {
    background: #040415;
    color: rgba(255, 255, 255, 0.8);
    padding: 70px;
}
.footer .footer_wrap {
    display: flex;
    justify-content: space-between;
}
.footer .f_nav {
    display: flex;
}
.footer .f_nav li {
    margin: 0 40px 0 0 ;
    /* border-right: 1px solid rgba(255, 255, 255, 0.2);
        li 메뉴 사이에 선은 border로 코딩 불가높이가 제어가 안됨. 위에서 아래로 내리고 싶은 위치가 조정이 안됨
        그래서 before after 선택자를 이용해서 선을 그어줌. */
    position: relative;
}
.footer .f_nav li::after {
    position: absolute; /* 자유롭게 선을 긋기 위해서 absolute */
    right: -21px;
    top: 5px;
    width: 1px;
    height: 10px;
    background-color: rgba(255, 255, 255, 0.2);
    content: ""; /* before after 가상선택자는 content 필수 */
}
.footer .f_nav li:last-child:after {
    display: none;
}
.footer .f_nav li.privacy {
    font-weight: 700;
}
.footer .f_info {
    display: flex;
    margin: 15px 0;
}
.footer .f_info address,
.footer .f_info span {
    margin-right: 40px;
}
.footer .fmaily_site button {
    width: 150px;
    line-height: 30px;
    /* 버튼의 높이를 행간으로 줌
    버튼은 그 높이를 가져야하고 글자는 그 높이에 위아래 가운데 배치
    그걸 한번에 해결하는게 line-height
    만약 내가 그냥 heigt로 줬다면 글자에 상단 여백을 추가로 줘야 함. */
    border: 1px solid rgba(255, 255, 255, 0.8);
    display: flex;
    justify-content: space-between;
    padding: 0 9px;
}
